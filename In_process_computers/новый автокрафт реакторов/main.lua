local constants = dofile("constants.lua")

--материалы для создания:
--комп: транспозеры
--робот
--7 репликаторов, 4 хранилища шаблонов (хранилищ можно меньше, если придумать, как разместить их)
--барабаны, баки
--генератор материи

--идея: сделать программу, которая будет контролировать существующие реакторы, контролировать генераторы материи, которые обеспечивают его ураном
-- и создавать новые реакторы с моментальной привязкой к программе
--надо роботу добавить режим раскопки (в интерфейсе создания реактора флажок "расчистить местность")

--компоненты будут подключаться по воздуху с помощью тенуля точка точка

--сначала сканируем основной сундук на наличие всех блоков
--если что-то есть, создаем этого блока меньше 

--проблемы:
--придется ставить робота вручную, где будет расположен новыей реактор
--как сразу привязывать новый реактор к системе реакторов?
--надо как-то передавать удаленно информацию от реакторов
--мб поставить снизу комп и связать связанными картами?

--tot yflj cltkfnm ht;br jxbcnrb nthhbnjhbb gj yf;fnb. yf xtr,jrc


--показатели для мониторинга реакторов:
--температура корпуса и ядра - шкала с процентом нагрева
--кол-во топлива - шкала
--буфер энергии - шкала
--выработка энергии в тик
--потребление топлива


--что уже есть:
--постройка чистого реактора без контроллера компа и труб, подключенных к нему
--заказ материалов для постройки реактора, без вызова (вызывать пока вручную)
--часть графического интерфейса, без привязки данных от реактора

--что осталось:
--написать стартовое окно, с кнопками: построить новый реактор, перейти в режим контроля существующих
--написать интерфейс для создания реактора (надо еще придумать, что делать с координатами)

function main()
    
end

main()